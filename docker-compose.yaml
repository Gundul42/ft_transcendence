version: '3.3'

services:
  #nginx:
  #  restart: always
  #  depends_on:
  #    - backend
  #  build: "./nginx"
  #  image: "nginx:latest"
  #  ports:
  #    - "443:443"
  #    - "80:80"
  #  networks:
  #    - app
  #  volumes:
  #    - ./nginx/conf.d:/etc/nginx/conf.d:ro
  #    - ./nginx/ssl:/etc/nginx/ssl:ro
  #    - ./frontend/content:/var/www/html/content:ro

  frontend:
    restart: always
    depends_on:
      - backend
    build: "./frontend"
    image: "frontend:latest"
    ports:
      - "443:443"
      - "80:80"
    networks:
      - app
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend/src:/home/app_frontend/frontend/src:ro
      - ./frontend/content:/var/www/html/content:ro

  backend:
    restart: always
    depends_on:
      - pgsql
    build: "./backend"
    image: "backend:latest"
    ports:
      - "127.0.0.1:8000:3000"
    networks:
      - app
    volumes:
      - ./backend/src:/home/app_backend/backend/src:ro
      - ./backend/resources/tsconfig.json:/home/app_backend/backend/tsconfig.json:ro

  pgsql:
    restart: always
    image: postgres:latest
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - app
    volumes:
      - v_pgsql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB

networks:
  app:

volumes:
  v_pgsql: